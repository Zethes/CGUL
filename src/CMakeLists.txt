# Jatta - General Utility Library
# Copyright (C) 2012-2013, Joshua Brookover and Amber Thrall
# All rights reserved.

# Store the top level directory
SET(TOP_LEVEL ${CMAKE_CURRENT_SOURCE_DIR}/..)

# Store the dependency folder
IF(NOT JATTA_DEPENDENCY_DIR)
    SET(JATTA_DEPENDENCY_DIR ${TOP_LEVEL}/dep)
ENDIF()

INCLUDE(SourceControl.cmake)

# Add the source subdirectories
ADD_SUBDIRECTORY(Jatta/Assimp)
ADD_SUBDIRECTORY(Jatta/Collision)
ADD_SUBDIRECTORY(Jatta/Containers)
ADD_SUBDIRECTORY(Jatta/External)
ADD_SUBDIRECTORY(Jatta/File)
ADD_SUBDIRECTORY(Jatta/Fonts)
ADD_SUBDIRECTORY(Jatta/Graphics)
ADD_SUBDIRECTORY(Jatta/Images)
ADD_SUBDIRECTORY(Jatta/Math)
ADD_SUBDIRECTORY(Jatta/Models)
ADD_SUBDIRECTORY(Jatta/Network)
ADD_SUBDIRECTORY(Jatta/OpenGL)
ADD_SUBDIRECTORY(Jatta/Utility)
ADD_SUBDIRECTORY(Jatta/Windows)

# Add the Jatta.h file to the list of source files
SET(JATTA_SOURCE ${JATTA_SOURCE} ${CMAKE_CURRENT_LIST_DIR}/Jatta.h)
INSTALL(FILES Jatta.h DESTINATION include/)

INCLUDE(GroupControl.cmake)

# Set the output directory to the user defined one or the default one
IF(JATTA_LIB_DIRECTORY)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${JATTA_LIB_DIRECTORY})
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${JATTA_LIB_DIRECTORY})
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${JATTA_LIB_DIRECTORY})
ELSE()
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR}/lib)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR}/lib)
ENDIF()
IF(JATTA_DLL_DIRECTORY)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${JATTA_DLL_DIRECTORY})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${JATTA_DLL_DIRECTORY})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${JATTA_DLL_DIRECTORY})
ELSE()
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR}/bin)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR}/bin)
ENDIF()

# Setup compiler settings
SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_INCLUDES -DGLEW_NO_GLU -DWIN32_LEAN_AND_MEAN -DNOMINMAX -DJATTA_BUILD)
IF(NOT APPLE AND NOT MSVC)
    SET(CMAKE_CXX_FLAGS "-std=c++0x -MD -Os -s -g -Wall ${CMAKE_CXX_FLAGS}")
ENDIF()
IF(MSVC)
    SET(CMAKE_CXX_FLAGS "/EHsc ${CMAKE_CXX_FLAGS}")
    SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DMSVC)
ENDIF()
IF(APPLE)
    SET(CMAKE_CXX_FLAGS "-std=c++0x -ObjC++ -Wall ${CMAKE_CXX_FLAGS}")
ENDIF()
SET(CMAKE_CXX_FLAGS "-I${JATTA_DEPENDENCY_DIR}/include ${CMAKE_CXX_FLAGS}")

# Create the Jatta library
ADD_LIBRARY(Jatta SHARED ${JATTA_SOURCE})

# Find Apple's Carbon and Cocoa libraries
if(APPLE)
    INCLUDE_DIRECTORIES(/Developer/Headers/FlatCarbon)
    FIND_LIBRARY(CARBON_LIBRARY Carbon)
    FIND_LIBRARY(COCOA_LIBRARY Cocoa)
    FIND_LIBRARY(APP_SERVICES_LIBRARY ApplicationServices)
    MARK_AS_ADVANCED(CARBON_LIBRARY COCOA_LIBRARY APP_SERVICES_LIBRARY)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} ${CARBON_LIBRARY} ${COCOA_LIBRARY} ${APP_SERVICES_LIBRARY})
ENDIF()

IF(NOT JATTA_NO_FONTS)
    ADD_LIBRARY(freetype STATIC IMPORTED)
    SET_TARGET_PROPERTIES(freetype PROPERTIES IMPORTED_LOCATION ${JATTA_DEPENDENCY_DIR}/lib/libfreetype.a)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} freetype)
ELSE()
    SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_NO_FONTS)
ENDIF()

IF(NOT JATTA_NO_GRAPHICS)
    IF(NOT JATTALIBS_DIR)
        ADD_LIBRARY(glew STATIC IMPORTED)
        SET_TARGET_PROPERTIES(glew PROPERTIES IMPORTED_LOCATION ${JATTA_DEPENDENCY_DIR}/lib/libglew.a)
    ENDIF()
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} glew)
    IF(GLEW_STATIC OR NOT JATTALIBS_DIR)
        SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DGLEW_STATIC)
        IF(APPLE)
            FIND_LIBRARY(OPENGL_LIBRARY OpenGL)
            MARK_AS_ADVANCED(OPENGL_LIBRARY)
            SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} ${OPENGL_LIBRARY})
        ELSEIF(UNIX)
            SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} GL)
        ELSEIF(WIN32)
            SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} opengl32)
        ENDIF()
    ENDIF()
ELSE()
    SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_NO_GRAPHICS)
ENDIF()

IF(NOT JATTA_NO_PNG)
    ADD_LIBRARY(libpng STATIC IMPORTED)
    SET_TARGET_PROPERTIES(libpng PROPERTIES IMPORTED_LOCATION ${JATTA_DEPENDENCY_DIR}/lib/libpng15.a)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} libpng)
    SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_PNG)

    ADD_LIBRARY(zlib STATIC IMPORTED)
    SET_TARGET_PROPERTIES(zlib PROPERTIES IMPORTED_LOCATION ${JATTA_DEPENDENCY_DIR}/lib/libz.a)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} zlib)
ELSE()
    SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_NO_PNG)
ENDIF()

IF(NOT JATTA_NO_JPEG)
    ADD_LIBRARY(jpeg STATIC IMPORTED)
    SET_TARGET_PROPERTIES(jpeg PROPERTIES IMPORTED_LOCATION ${JATTA_DEPENDENCY_DIR}/lib/libjpeg.a)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} jpeg)
ELSE()
    SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_NO_JPEG)
ENDIF()

IF(NOT JATTA_NO_ASSIMP)
    ADD_LIBRARY(assimp STATIC IMPORTED)
    SET_TARGET_PROPERTIES(assimp PROPERTIES IMPORTED_LOCATION ${JATTA_DEPENDENCY_DIR}/lib/libassimp.a)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} assimp)
ELSE()
    SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_NO_ASSIMP)
ENDIF()

IF(NOT JATTA_NO_NETWORK)
    IF(WIN32)
        SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} Ws2_32)
    ENDIF()
ELSE()
    SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_NO_NETWORK)
ENDIF()

IF(MSVC)
    ADD_LIBRARY(mingw STATIC IMPORTED)
    SET_TARGET_PROPERTIES(mingw PROPERTIES IMPORTED_LOCATION ${JATTA_DEPENDENCY_DIR}/lib/libmingwex.a)
    set(JATTA_LIBRARIES ${JATTA_LIBRARIES} mingw)

    ADD_LIBRARY(gcc STATIC IMPORTED)
    SET_TARGET_PROPERTIES(gcc PROPERTIES IMPORTED_LOCATION ${JATTA_DEPENDENCY_DIR}/lib/libgcc.a)
    set(JATTA_LIBRARIES ${JATTA_LIBRARIES} gcc)
ENDIF()

TARGET_LINK_LIBRARIES(Jatta ${JATTA_LIBRARIES})

ADD_DEFINITIONS(${JATTA_DEFINITIONS})

INSTALL(TARGETS Jatta DESTINATION lib/)

INCLUDE(acknowledgements.cmake)
