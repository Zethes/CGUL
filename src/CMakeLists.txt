MACRO(ADD_GROUP LABEL)
    SET(GROUPS ${GROUPS} ${LABEL} PARENT_SCOPE)
    SET(CURRENT_GROUP ${LABEL})
ENDMACRO()

MACRO(ADD_SOURCE FILE)
    SET(GROUP_FILES ${CURRENT_GROUP}_FILES)
    SET(CURRENT_GROUP_FILES ${GROUP_FILES})
    SET(${GROUP_FILES} ${${GROUP_FILES}} ${CMAKE_CURRENT_LIST_DIR}/${FILE} " ")
    SET(${GROUP_FILES} ${${GROUP_FILES}} ${CMAKE_CURRENT_LIST_DIR}/${FILE} " " PARENT_SCOPE)
    SET(JATTA_SOURCE ${JATTA_SOURCE} " " ${CMAKE_CURRENT_LIST_DIR}/${FILE})
    SET(JATTA_SOURCE ${JATTA_SOURCE} " " ${CMAKE_CURRENT_LIST_DIR}/${FILE} PARENT_SCOPE)
ENDMACRO()

MACRO(ADD_HEADER FILE INSTALL_PATH)
    ADD_SOURCE(${FILE})
    INSTALL(FILES ${FILE} DESTINATION ${INSTALL_PATH})
ENDMACRO()

ADD_SUBDIRECTORY(External)
ADD_SUBDIRECTORY(File)
ADD_SUBDIRECTORY(Fonts)
ADD_SUBDIRECTORY(Graphics)
ADD_SUBDIRECTORY(Images)
ADD_SUBDIRECTORY(Math)
ADD_SUBDIRECTORY(Models)
ADD_SUBDIRECTORY(Network)
ADD_SUBDIRECTORY(Utility)
ADD_SUBDIRECTORY(Windows)

SET(JATTA_SOURCE ${JATTA_SOURCE} " " ${CMAKE_CURRENT_LIST_DIR}/Jatta.h)
INSTALL(FILES Jatta.h DESTINATION include/)

FOREACH(GROUP ${GROUPS})
    SET(GROUP_FILES ${GROUP}_FILES)
    SOURCE_GROUP(${GROUP} FILES ${${GROUP_FILES}})
ENDFOREACH()

IF(APPLE)
    MESSAGE(FATAL_ERROR "Sorry, Macintosh builds of Jatta are not currently supported.  They will be in the future!")
ENDIF()

SET(CMAKE_INSTALL_PREFIX ${PROJECT_BINARY_DIR})

IF(MSYS)
    SET(CMAKE_CXX_FLAGS "-std=c++11 -Os -s -o ${CMAKE_CXX_FLAGS}")
ENDIF()

SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_INCLUDES -DGLEW_STATIC -DWIN32_LEAN_AND_MEAN -DNOMINMAX -DJATTA_BUILD)

IF(MSVC)
    SET(CMAKE_CXX_FLAGS "/EHsc ${CMAKE_CXX_FLAGS}")
    SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DMSVC)
ENDIF(MSVC)

ADD_LIBRARY(Jatta SHARED ${JATTA_SOURCE})

SET(CMAKE_CXX_FLAGS "-I${TOP_LEVEL}/dep/include ${CMAKE_CXX_FLAGS}")

ADD_LIBRARY(libpng STATIC IMPORTED)
SET_TARGET_PROPERTIES(libpng PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libpng15.a)
SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} libpng)

ADD_LIBRARY(glew STATIC IMPORTED)
SET_TARGET_PROPERTIES(glew PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libglew.a)
SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} glew)

IF(NOT JATTA_NO_FONTS)
    ADD_LIBRARY(freetype STATIC IMPORTED)
    SET_TARGET_PROPERTIES(freetype PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libfreetype.a)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} freetype)
    SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_FONTS)
ENDIF(NOT JATTA_NO_FONTS)

ADD_LIBRARY(zlib STATIC IMPORTED)
SET_TARGET_PROPERTIES(zlib PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libz.a)
SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} zlib)

IF(MSVC)
    ADD_LIBRARY(mingw STATIC IMPORTED)
    SET_TARGET_PROPERTIES(mingw PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libmingwex.a)
    set(JATTA_LIBRARIES ${JATTA_LIBRARIES} mingw)

    ADD_LIBRARY(gcc STATIC IMPORTED)
    SET_TARGET_PROPERTIES(gcc PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libgcc.a)
    set(JATTA_LIBRARIES ${JATTA_LIBRARIES} gcc)
ENDIF(MSVC)

IF(UNIX)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} GL)
ENDIF(UNIX)

IF(WIN32)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} opengl32)
ENDIF(WIN32)

TARGET_LINK_LIBRARIES(Jatta ${JATTA_LIBRARIES})

ADD_DEFINITIONS(${JATTA_DEFINITIONS})

INSTALL(TARGETS Jatta DESTINATION lib/)