# Jatta - General Utility Library
# Copyright (C) 2012-2013, Joshua Brookover and Amber Thrall
# All rights reserved.

SET(TOP_LEVEL ${CMAKE_CURRENT_SOURCE_DIR}/..)

MACRO(ADD_GROUP LABEL)
    SET(GROUPS ${GROUPS} ${LABEL} PARENT_SCOPE)
    SET(CURRENT_GROUP ${LABEL})
ENDMACRO()

MACRO(ADD_OTHER FILE)
    SET(GROUP_FILES ${CURRENT_GROUP}_FILES)
    SET(CURRENT_GROUP_FILES ${GROUP_FILES})
    SET(${GROUP_FILES} ${${GROUP_FILES}} ${CMAKE_CURRENT_LIST_DIR}/${FILE} )
    SET(${GROUP_FILES} ${${GROUP_FILES}} ${CMAKE_CURRENT_LIST_DIR}/${FILE} PARENT_SCOPE)
    SET(JATTA_SOURCE ${JATTA_SOURCE} ${CMAKE_CURRENT_LIST_DIR}/${FILE})
    SET(JATTA_SOURCE ${JATTA_SOURCE} ${CMAKE_CURRENT_LIST_DIR}/${FILE} PARENT_SCOPE)
ENDMACRO()

MACRO(ADD_SOURCE FILE)
    ADD_OTHER(${FILE})
ENDMACRO()

MACRO(ADD_HEADER_NO_INSTALL FILE INSTALL_PATH)
    ADD_SOURCE(${FILE})
ENDMACRO()

MACRO(ADD_HEADER FILE INSTALL_PATH)
    ADD_SOURCE(${FILE})
    INSTALL(FILES ${FILE} DESTINATION ${INSTALL_PATH})
ENDMACRO()

ADD_SUBDIRECTORY(Jatta/External)
ADD_SUBDIRECTORY(Jatta/File)
ADD_SUBDIRECTORY(Jatta/Fonts)
ADD_SUBDIRECTORY(Jatta/Graphics)
ADD_SUBDIRECTORY(Jatta/Images)
ADD_SUBDIRECTORY(Jatta/Math)
ADD_SUBDIRECTORY(Jatta/Models)
ADD_SUBDIRECTORY(Jatta/Network)
ADD_SUBDIRECTORY(Jatta/OpenGL)
ADD_SUBDIRECTORY(Jatta/Utility)
ADD_SUBDIRECTORY(Jatta/Windows)

SET(JATTA_SOURCE ${JATTA_SOURCE} ${CMAKE_CURRENT_LIST_DIR}/Jatta.h)
INSTALL(FILES Jatta.h DESTINATION include/)

FOREACH(GROUP ${GROUPS})
    SET(GROUP_FILES ${GROUP}_FILES)
    SOURCE_GROUP(${GROUP} FILES ${${GROUP_FILES}})
ENDFOREACH()

SET(CMAKE_INSTALL_PREFIX ${PROJECT_BINARY_DIR})

IF(JATTA_LIB_DIRECTORY)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${JATTA_LIB_DIRECTORY})
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${JATTA_LIB_DIRECTORY})
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${JATTA_LIB_DIRECTORY})
ELSE()
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR}/lib)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR}/lib)
ENDIF()
IF(JATTA_DLL_DIRECTORY)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${JATTA_DLL_DIRECTORY})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${JATTA_DLL_DIRECTORY})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${JATTA_DLL_DIRECTORY})
ELSE()
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR}/bin)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR}/bin)
ENDIF()

IF(NOT APPLE AND NOT MSVC)
    SET(CMAKE_CXX_FLAGS "-std=c++0x -Os -s -o -g ${CMAKE_CXX_FLAGS}")
ENDIF()

SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_INCLUDES -DGLEW_STATIC -DWIN32_LEAN_AND_MEAN -DNOMINMAX -DJATTA_BUILD)

IF(MSVC)
    SET(CMAKE_CXX_FLAGS "/EHsc ${CMAKE_CXX_FLAGS}")
    SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DMSVC)
ENDIF()

ADD_LIBRARY(Jatta SHARED ${JATTA_SOURCE})

SET(CMAKE_CXX_FLAGS "-I${TOP_LEVEL}/dep/include ${CMAKE_CXX_FLAGS}")

if(APPLE)
    SET(CMAKE_CXX_FLAGS "-std=c++0x -ObjC++ ${CMAKE_CXX_FLAGS}")
    INCLUDE_DIRECTORIES(/Developer/Headers/FlatCarbon)
    FIND_LIBRARY(CARBON_LIBRARY Carbon)
    FIND_LIBRARY(COCOA_LIBRARY Cocoa)
    FIND_LIBRARY(APP_SERVICES_LIBRARY ApplicationServices)
    MARK_AS_ADVANCED(CARBON_LIBRARY COCOA_LIBRARY APP_SERVICES_LIBRARY)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} ${CARBON_LIBRARY} ${COCOA_LIBRARY} ${APP_SERVICES_LIBRARY})
ENDIF()

IF(NOT JATTA_NO_FONTS)
    ADD_LIBRARY(freetype STATIC IMPORTED)
    SET_TARGET_PROPERTIES(freetype PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libfreetype.a)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} freetype)
ENDIF()

IF(NOT JATTA_NO_GRAPHICS)
    IF(NOT APPLE)
        ADD_LIBRARY(glew STATIC IMPORTED)
        SET_TARGET_PROPERTIES(glew PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libglew.a)
        SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} glew)
        IF(UNIX)
            SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} GL)
        ELSEIF(WIN32)
            SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} opengl32)
        ENDIF()
        SET(JATTA_DEFINITIONS ${JATTA_DEFINITIONS} -DJATTA_GRAPHICS)
    ELSE()
        FIND_LIBRARY(OPENGL_LIBRARY OpenGL)
        MARK_AS_ADVANCED(OPENGL_LIBRARY)
        SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} ${OPENGL_LIBRARY})
    ENDIF()
ENDIF()

IF(NOT JATTA_NO_PNG)
    ADD_LIBRARY(libpng STATIC IMPORTED)
    SET_TARGET_PROPERTIES(libpng PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libpng15.a)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} libpng)

    ADD_LIBRARY(zlib STATIC IMPORTED)
    SET_TARGET_PROPERTIES(zlib PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libz.a)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} zlib)
ENDIF()

IF(NOT JATTA_NO_JPEG)
    ADD_LIBRARY(jpeg STATIC IMPORTED)
    SET_TARGET_PROPERTIES(jpeg PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libjpeg.a)
    SET(JATTA_LIBRARIES ${JATTA_LIBRARIES} jpeg)
ENDIF()

IF(MSVC)
    ADD_LIBRARY(mingw STATIC IMPORTED)
    SET_TARGET_PROPERTIES(mingw PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libmingwex.a)
    set(JATTA_LIBRARIES ${JATTA_LIBRARIES} mingw)

    ADD_LIBRARY(gcc STATIC IMPORTED)
    SET_TARGET_PROPERTIES(gcc PROPERTIES IMPORTED_LOCATION ${TOP_LEVEL}/dep/lib/libgcc.a)
    set(JATTA_LIBRARIES ${JATTA_LIBRARIES} gcc)
ENDIF(MSVC)

TARGET_LINK_LIBRARIES(Jatta ${JATTA_LIBRARIES})

ADD_DEFINITIONS(${JATTA_DEFINITIONS})

INSTALL(TARGETS Jatta DESTINATION lib/)